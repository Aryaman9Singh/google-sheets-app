{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryam\\\\react-app\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport Navbar from \"../components/NavBar\";\nimport { GoogleLogin } from \"react-google-login\";\nimport Logout from \"../Logout\";\nimport { CLIENT_ID } from \"../constants/credentials\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  //save data in local storage so that only one time login is required for id.\n  const [logindata, setLoginData] = useState(localStorage.getItem(\"loginData\") ? JSON.parse(localStorage.getItem(\"loginData\")) : null);\n\n  const onSuccess = res => {\n    console.log(\"Login Successful! Current User is :\", res.profileObj);\n  };\n\n  const onFailure = res => {\n    console.log(\"Login Failed! Res : \", res);\n  };\n\n  const handleLogin = async googleData => {\n    const res = await fetch(\"/api/google-login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        token: googleData.tokenId\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    setLoginData(data);\n    localStorage.setItem(\"loginData\", JSON.stringify(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: styles.image,\n        src: \"https://cdn.worldvectorlogo.com/logos/google-sheets-full-logo-1.svg\",\n        alt: \"Google sheets Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: CLIENT_ID,\n        buttonText: \"Login with Google\" // onSuccess={onSuccess}\n        ,\n        onFailure: onFailure,\n        cookiePolicy: \"single_host_origin\",\n        handleLogin: handleLogin // isSignedIn = {true}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"YozGBZmERu5OoCUfM3jP2jRkb1s=\");\n\n_c = Login;\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  image: {\n    height: 200,\n    width: 400\n  }\n};\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Component","useState","Navbar","GoogleLogin","Logout","CLIENT_ID","Login","logindata","setLoginData","localStorage","getItem","JSON","parse","onSuccess","res","console","log","profileObj","onFailure","handleLogin","googleData","fetch","method","body","stringify","token","tokenId","headers","data","json","setItem","styles","container","box","image","display","justifyContent","alignItems","flexDirection","height","width"],"sources":["C:/Users/aryam/react-app/src/pages/Login.js"],"sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport Navbar from \"../components/NavBar\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport Logout from \"../Logout\";\r\nimport { CLIENT_ID } from \"../constants/credentials\";\r\n\r\nconst Login = () => {\r\n  //save data in local storage so that only one time login is required for id.\r\n\r\n  const [logindata, setLoginData] = useState(\r\n    localStorage.getItem(\"loginData\")\r\n      ? JSON.parse(localStorage.getItem(\"loginData\"))\r\n      : null\r\n  );\r\n  const onSuccess = (res) => {\r\n    console.log(\"Login Successful! Current User is :\", res.profileObj);\r\n  };\r\n  const onFailure = (res) => {\r\n    console.log(\"Login Failed! Res : \", res);\r\n  };\r\n  const handleLogin = async (googleData) => {\r\n    const res = await fetch(\"/api/google-login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        token: googleData.tokenId,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    const data = await res.json();\r\n    setLoginData(data);\r\n    localStorage.setItem(\"loginData\", JSON.stringify(data));\r\n  };\r\n  return (\r\n    <div style={styles.container}>\r\n    \r\n<div style = {styles.box}>\r\n        <img\r\n          style={styles.image}\r\n          src=\"https://cdn.worldvectorlogo.com/logos/google-sheets-full-logo-1.svg\"\r\n          alt=\"Google sheets Logo\"\r\n        />\r\n          {/* change the isSignedIn to a dynamic one instead of always true */}\r\n         <GoogleLogin\r\n          clientId={CLIENT_ID}\r\n          buttonText=\"Login with Google\"\r\n          // onSuccess={onSuccess}\r\n          onFailure={onFailure}\r\n          cookiePolicy={\"single_host_origin\"}\r\n          handleLogin={handleLogin}\r\n          // isSignedIn = {true}\r\n        />\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n  \r\n    display:'flex',\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    flexDirection:'column'\r\n  },\r\n\r\n  \r\n  image: {\r\n    height: 200,\r\n    width: 400,\r\n  },\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB;EAEA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CACxCQ,YAAY,CAACC,OAAb,CAAqB,WAArB,IACIC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADJ,GAEI,IAHoC,CAA1C;;EAKA,MAAMG,SAAS,GAAIC,GAAD,IAAS;IACzBC,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDF,GAAG,CAACG,UAAvD;EACD,CAFD;;EAGA,MAAMC,SAAS,GAAIJ,GAAD,IAAS;IACzBC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;EACD,CAFD;;EAGA,MAAMK,WAAW,GAAG,MAAOC,UAAP,IAAsB;IACxC,MAAMN,GAAG,GAAG,MAAMO,KAAK,CAAC,mBAAD,EAAsB;MAC3CC,MAAM,EAAE,MADmC;MAE3CC,IAAI,EAAEZ,IAAI,CAACa,SAAL,CAAe;QACnBC,KAAK,EAAEL,UAAU,CAACM;MADC,CAAf,CAFqC;MAK3CC,OAAO,EAAE;QACP,gBAAgB;MADT;IALkC,CAAtB,CAAvB;IAUA,MAAMC,IAAI,GAAG,MAAMd,GAAG,CAACe,IAAJ,EAAnB;IACArB,YAAY,CAACoB,IAAD,CAAZ;IACAnB,YAAY,CAACqB,OAAb,CAAqB,WAArB,EAAkCnB,IAAI,CAACa,SAAL,CAAeI,IAAf,CAAlC;EACD,CAdD;;EAeA,oBACE;IAAK,KAAK,EAAEG,MAAM,CAACC,SAAnB;IAAA,uBAEJ;MAAK,KAAK,EAAID,MAAM,CAACE,GAArB;MAAA,wBACQ;QACE,KAAK,EAAEF,MAAM,CAACG,KADhB;QAEE,GAAG,EAAC,qEAFN;QAGE,GAAG,EAAC;MAHN;QAAA;QAAA;QAAA;MAAA,QADR,eAOS,QAAC,WAAD;QACC,QAAQ,EAAE7B,SADX;QAEC,UAAU,EAAC,mBAFZ,CAGC;QAHD;QAIC,SAAS,EAAEa,SAJZ;QAKC,YAAY,EAAE,oBALf;QAMC,WAAW,EAAEC,WANd,CAOC;;MAPD;QAAA;QAAA;QAAA;MAAA,QAPT;IAAA;MAAA;MAAA;MAAA;IAAA;EAFI;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CApDD;;GAAMb,K;;KAAAA,K;AAsDN,MAAMyB,MAAM,GAAG;EACbC,SAAS,EAAE;IAETG,OAAO,EAAC,MAFC;IAGTC,cAAc,EAAC,QAHN;IAITC,UAAU,EAAC,QAJF;IAKTC,aAAa,EAAC;EALL,CADE;EAUbJ,KAAK,EAAE;IACLK,MAAM,EAAE,GADH;IAELC,KAAK,EAAE;EAFF;AAVM,CAAf;AAgBA,eAAelC,KAAf"},"metadata":{},"sourceType":"module"}